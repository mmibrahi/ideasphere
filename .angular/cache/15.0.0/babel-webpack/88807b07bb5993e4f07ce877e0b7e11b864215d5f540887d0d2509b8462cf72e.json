{"ast":null,"code":"// import { HttpClient } from '@angular/common/http';\nimport { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../signup-login.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Login Failed\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Username is required one \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_span_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Password is required one \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(formBuilder, service, router) {\n    this.formBuilder = formBuilder;\n    this.service = service;\n    this.router = router;\n    this.loginStatus = true;\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n  }\n  get username() {\n    return this.loginForm.get('username');\n  }\n  get password() {\n    return this.loginForm.get('password');\n  }\n  login() {\n    this.service.login(this.loginForm).subscribe(results => {\n      console.log(results);\n      if (results) {\n        //navigate to dashboard\n        this.router.navigate(['dashboard']);\n        var value = 'Basic ' + btoa(this.loginForm.value.username + ':' + this.loginForm.value.password);\n        sessionStorage.setItem('loginCredentials', value);\n      } else {\n        this.loginStatus = false;\n        this.loginForm.get('password').setValue(\"\");\n        this.loginForm.get('password').markAsUntouched();\n      }\n    }, error => {\n      console.log(error);\n      this.loginStatus = false;\n      this.loginForm.get('password').setValue(\"\");\n      this.loginForm.get('password').markAsUntouched();\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SignupLoginService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 45,\n    vars: 4,\n    consts: [[4, \"ngIf\"], [\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"http-equiv\", \"X-UA-Compatible\", \"content\", \"IE=edge\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [1, \"container\"], [1, \"mid\"], [\"onclick\", \"document.getElementById('id01').style.display='block'\", 2, \"width\", \"auto\"], [\"id\", \"id01\", 1, \"modal\"], [\"action\", \"/action_page.php\", \"method\", \"post\", 1, \"modal-content\", \"animate\", 3, \"formGroup\", \"ngSubmit\"], [1, \"imgcontainer\"], [\"onclick\", \"document.getElementById('id01').style.display='none'\", \"title\", \"Close Modal\", 1, \"close\"], [\"for\", \"uname\"], [\"type\", \"text\", \"placeholder\", \"Enter Username\", \"name\", \"uname\", \"required\", \"\", \"formControlName\", \"username\"], [\"for\", \"psw\"], [\"type\", \"password\", \"placeholder\", \"Enter Password\", \"name\", \"psw\", \"required\", \"\", \"formControlName\", \"password\"], [\"type\", \"submit\"], [\"type\", \"checkbox\", \"checked\", \"checked\", \"name\", \"remember\"], [1, \"container\", 2, \"background-color\", \"#f1f1f1\"], [\"type\", \"button\", \"onclick\", \"document.getElementById('id01').style.display='none'\", 1, \"cancelbtn\"], [1, \"psw\"], [\"href\", \"#\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, LoginComponent_div_0_Template, 2, 0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"html\", 1)(2, \"head\");\n        i0.ɵɵelement(3, \"meta\", 2)(4, \"meta\", 3)(5, \"meta\", 4);\n        i0.ɵɵelementStart(6, \"title\");\n        i0.ɵɵtext(7, \"Document\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"body\")(9, \"div\", 5)(10, \"div\", 6)(11, \"h2\");\n        i0.ɵɵtext(12, \"IdeaSphere: An idea sharing platform \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 7);\n        i0.ɵɵtext(14, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 8)(16, \"form\", 9);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_16_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(17, \"div\", 10)(18, \"span\", 11);\n        i0.ɵɵtext(19, \"\\u00D7\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 5)(21, \"div\")(22, \"label\", 12)(23, \"b\");\n        i0.ɵɵtext(24, \"Username\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(25, \"input\", 13);\n        i0.ɵɵtemplate(26, LoginComponent_span_26_Template, 2, 0, \"span\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\")(28, \"label\", 14)(29, \"b\");\n        i0.ɵɵtext(30, \"Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(31, \"input\", 15);\n        i0.ɵɵtemplate(32, LoginComponent_span_32_Template, 2, 0, \"span\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"button\", 16);\n        i0.ɵɵtext(34, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"label\");\n        i0.ɵɵelement(36, \"input\", 17);\n        i0.ɵɵtext(37, \" Remember me \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(38, \"div\", 18)(39, \"button\", 19);\n        i0.ɵɵtext(40, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"span\", 20);\n        i0.ɵɵtext(42, \"Forgot \");\n        i0.ɵɵelementStart(43, \"a\", 21);\n        i0.ɵɵtext(44, \"password?\");\n        i0.ɵɵelementEnd()()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.loginStatus);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.username.touched && ctx.username.invalid);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.password.touched && ctx.password.invalid);\n      }\n    },\n    dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 473:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(64:3) C:\\\\\\\\Users\\\\\\\\malak\\\\\\\\Documents\\\\\\\\OneDrive\\\\\\\\uni\\\\\\\\cmuq\\\\\\\\UBS-ideasphere\\\\\\\\ideasphere\\\\\\\\src\\\\\\\\app\\\\\\\\admin\\\\\\\\login\\\\\\\\login.component.css Unclosed block\\\\n\\\\n \\\\u001b[90m 62 | \\\\u001b[39m  \\\\u001b[33m}\\\\u001b[39m\\\\n \\\\u001b[90m 63 | \\\\u001b[39m  \\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 64 | \\\\u001b[39m  \\\\u001b[33m.container\\\\u001b[39m \\\\u001b[33m{\\\\u001b[39m\\\\n \\\\u001b[90m    | \\\\u001b[39m  \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 65 | \\\\u001b[39m    display\\\\u001b[33m:\\\\u001b[39m flex\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 66 | \\\\u001b[39m    align-items\\\\u001b[33m:\\\\u001b[39m center\\\\u001b[33m;\\\\u001b[39m\\\\n\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[473]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=login.component.css.map*/\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["FormControl","Validators","i0","LoginComponent","constructor","formBuilder","service","router","ngOnInit","loginForm","group","username","required","password","get","login","subscribe","results","console","log","navigate","value","btoa","sessionStorage","setItem","loginStatus","setValue","markAsUntouched","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\malak\\Documents\\OneDrive\\uni\\cmuq\\UBS-ideasphere\\ideasphere\\src\\app\\admin\\login\\login.component.ts","C:\\Users\\malak\\Documents\\OneDrive\\uni\\cmuq\\UBS-ideasphere\\ideasphere\\src\\app\\admin\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n// import { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, FormControl, Validators} from '@angular/forms';\r\nimport { SignupLoginService } from '../signup-login.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm!: FormGroup;\r\n  loginStatus = true;\r\n\r\n  constructor(private formBuilder: FormBuilder, private service: SignupLoginService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n      this.loginForm = this.formBuilder.group({\r\n        username: new FormControl('', Validators.required),\r\n        password: new FormControl('', Validators.required)\r\n      })\r\n  }\r\n\r\n  get username(){\r\n    return this.loginForm.get('username');\r\n  }\r\n  get password(){\r\n    return this.loginForm.get('password');\r\n  }\r\n\r\n  login(){\r\n    this.service.login(this.loginForm).subscribe(\r\n      results => {\r\n        console.log(results);\r\n        if(results){\r\n          //navigate to dashboard\r\n          this.router.navigate(['dashboard']);\r\n          var value = 'Basic ' + btoa(this.loginForm.value.username + ':' + this.loginForm.value.password);\r\n          sessionStorage.setItem('loginCredentials', value);\r\n        }\r\n        else{\r\n          this.loginStatus = false;\r\n          this.loginForm.get('password').setValue(\"\");\r\n          this.loginForm.get('password').markAsUntouched();\r\n        }\r\n     },\r\n        error => {\r\n        console.log(error);\r\n        this.loginStatus = false\r\n        this.loginForm.get('password').setValue(\"\");\r\n        this.loginForm.get('password').markAsUntouched();\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  \r\n}\r\n"," <!-- <div class=\"content3\"> -->\r\n <div *ngIf=\"!loginStatus\">Login Failed</div> \r\n<!-- <div class=\"content1\">\r\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\r\n      <label for=\"username\"><b>Username:</b>\r\n   <input type=\"text\" formControlName=\"username\" placeholder=\"Username\"/>\r\n     <span *ngIf=\"username.touched && username.invalid\">\r\n        Username is required one\r\n    </span>\r\n  </label>\r\n  <br>\r\n <label for=\"password\"><b>Password</b>\r\n    <input type=\"password\" formControlName=\"password\" placeholder=\"Password\"/> \r\n     <span *ngIf=\"password.touched && password.invalid\">\r\n       Password is required one\r\n    </span>\r\n  </label>\r\n    <br/>\r\n    <button class=\"btn btn-primary\">\r\n    <input type=\"submit\" class=\"btn btn-primary\" value=\"Login\"/>\r\n  </button>\r\n</form>\r\n</div>\r\n</div> -->\r\n\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>Document</title>\r\n</head>\r\n\r\n\r\n\r\n<body>\r\n<div class=\"container\">\r\n<div class=\"mid\">\r\n<h2>IdeaSphere: An idea sharing platform </h2>\r\n\r\n<button onclick=\"document.getElementById('id01').style.display='block'\" style=\"width:auto;\">Login</button>\r\n\r\n<div id=\"id01\" class=\"modal\">\r\n  \r\n  <form class=\"modal-content animate\" action=\"/action_page.php\" method=\"post\" [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\r\n    <div class=\"imgcontainer\">\r\n      <span onclick=\"document.getElementById('id01').style.display='none'\" class=\"close\" title=\"Close Modal\">&times;</span>\r\n      <!-- <img src=\"img_avatar2.png\" alt=\"Avatar\" class=\"avatar\"> -->\r\n    </div>\r\n\r\n    <div class=\"container\">\r\n      <div>\r\n      <label for=\"uname\"><b>Username</b></label>\r\n      <input type=\"text\" placeholder=\"Enter Username\" name=\"uname\" required formControlName=\"username\">\r\n      <span *ngIf=\"username.touched && username.invalid\">\r\n        Username is required one\r\n    </span>\r\n  </div>\r\n    <div>\r\n      <label for=\"psw\"><b>Password</b></label>\r\n      <input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" required formControlName=\"password\">\r\n    <span *ngIf=\"password.touched && password.invalid\">\r\n      Password is required one\r\n   </span>\r\n  </div>\r\n      <button type=\"submit\">Login</button>\r\n      <label>\r\n        <input type=\"checkbox\" checked=\"checked\" name=\"remember\"> Remember me\r\n      </label>\r\n    </div>\r\n\r\n    <div class=\"container\" style=\"background-color:#f1f1f1\">\r\n      <button type=\"button\" onclick=\"document.getElementById('id01').style.display='none'\" class=\"cancelbtn\">Cancel</button>\r\n      <span class=\"psw\">Forgot <a href=\"#\">password?</a></span>\r\n    </div>\r\n  </form>\r\n</div>\r\n</div>\r\n</div>\r\n<script>\r\n// Get the modal\r\nvar modal = document.getElementById('id01');\r\n\r\n// When the user clicks anywhere outside of the modal, close it\r\nwindow.onclick = function(event) {\r\n    if (event.target == modal) {\r\n        modal.style.display = \"none\";\r\n    }\r\n}\r\n</script>\r\n\r\n</body>\r\n</html>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}