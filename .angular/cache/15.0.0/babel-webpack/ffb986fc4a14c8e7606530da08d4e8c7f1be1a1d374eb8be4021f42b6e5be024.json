{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n//import { FormGroup } from '@angular/forms';\n// import { FormGroup } from '@angular/forms';\nexport class SignupLoginService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = 'http://localhost:8080/api'; // Replace with your actual backend URL\n  }\n  // login(loginForm: FormGroup<any>){\n  //   var v1 = 'Basic ' + btoa(loginForm.value.username + \":\" + loginForm.value.password);\n  //   let headers = new HttpHeaders({Authorization: v1}); \n  //   return this.httpClient.get<any>('https://spring-boot-example1-app.herokuapp.com/person/login', { headers });\n  // }\n  login(loginForm) {\n    const authHeader = 'Basic ' + btoa(loginForm.value.username + \":\" + loginForm.value.password);\n    const headers = new HttpHeaders({\n      Authorization: authHeader\n    });\n    return this.httpClient.get(`${this.baseUrl}/login`, {\n      headers\n    });\n  }\n  static #_ = this.ɵfac = function SignupLoginService_Factory(t) {\n    return new (t || SignupLoginService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SignupLoginService,\n    factory: SignupLoginService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAG9D;AACA;AAKA,OAAM,MAAOC,kBAAkB;EAI7BC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAFtB,YAAO,GAAG,2BAA2B,CAAC,CAAE;EAEF;EAE5C;EACA;EACA;EACA;EACA;EAEAC,KAAK,CAACC,SAAoB;IACxB,MAAMC,UAAU,GAAG,QAAQ,GAAGC,IAAI,CAACF,SAAS,CAACG,KAAK,CAACC,QAAQ,GAAG,GAAG,GAAGJ,SAAS,CAACG,KAAK,CAACE,QAAQ,CAAC;IAC7F,MAAMC,OAAO,GAAG,IAAIX,WAAW,CAAC;MAAEY,aAAa,EAAEN;IAAU,CAAE,CAAC;IAC9D,OAAO,IAAI,CAACH,UAAU,CAACU,GAAG,CAAM,GAAG,IAAI,CAACC,OAAO,QAAQ,EAAE;MAAEH;IAAO,CAAE,CAAC;EACvE;EAAC;qBAhBQV,kBAAkB;EAAA;EAAA;WAAlBA,kBAAkB;IAAAc,SAAlBd,kBAAkB;IAAAe,YAFjB;EAAM","names":["HttpHeaders","SignupLoginService","constructor","httpClient","login","loginForm","authHeader","btoa","value","username","password","headers","Authorization","get","baseUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\malak\\Documents\\OneDrive\\uni\\cmuq\\UBS-ideasphere\\ideasphere\\src\\app\\admin\\signup-login.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n//import { FormGroup } from '@angular/forms';\r\n// import { FormGroup } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SignupLoginService {\r\n\r\n  private baseUrl = 'http://localhost:8080/api';  // Replace with your actual backend URL\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n    // login(loginForm: FormGroup<any>){\r\n    //   var v1 = 'Basic ' + btoa(loginForm.value.username + \":\" + loginForm.value.password);\r\n    //   let headers = new HttpHeaders({Authorization: v1}); \r\n    //   return this.httpClient.get<any>('https://spring-boot-example1-app.herokuapp.com/person/login', { headers });\r\n    // }\r\n\r\n    login(loginForm: FormGroup) {\r\n      const authHeader = 'Basic ' + btoa(loginForm.value.username + \":\" + loginForm.value.password);\r\n      const headers = new HttpHeaders({ Authorization: authHeader });\r\n      return this.httpClient.get<any>(`${this.baseUrl}/login`, { headers });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}