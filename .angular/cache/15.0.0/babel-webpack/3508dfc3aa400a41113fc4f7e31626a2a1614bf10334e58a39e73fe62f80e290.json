{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\n// import { HttpClient } from '@angular/common/http';\nimport { FormControl, Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(formBuilder, service, router) {\n    this.formBuilder = formBuilder;\n    this.service = service;\n    this.router = router;\n    this.loginStatus = true;\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n  }\n  get username() {\n    return this.loginForm.get('username');\n  }\n  get password() {\n    return this.loginForm.get('password');\n  }\n  login() {\n    this.service.login(this.loginForm).subscribe(results => {\n      console.log(results);\n      if (results) {\n        //navigate to dashboard\n        this.router.navigate(['dashboard']);\n        var value = 'Basic ' + btoa(this.loginForm.value.username + ':' + this.loginForm.value.password);\n        sessionStorage.setItem('loginCredentials', value);\n      } else {\n        this.loginStatus = false;\n        this.loginForm.get('password').setValue(\"\");\n        this.loginForm.get('password').markAsUntouched();\n      }\n    }, error => {\n      console.log(error);\n      this.loginStatus = false;\n      this.loginForm.get('password').setValue(\"\");\n      this.loginForm.get('password').markAsUntouched();\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD;AACA,SAAiCC,WAAW,EAAEC,UAAU,QAAO,gBAAgB;AAQxE,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YAAoBC,WAAwB,EAAUC,OAA2B,EAAUC,MAAc;IAArF,gBAAW,GAAXF,WAAW;IAAuB,YAAO,GAAPC,OAAO;IAA8B,WAAM,GAANC,MAAM;IAFjG,gBAAW,GAAG,IAAI;EAE0F;EAE5GC,QAAQ;IACJ,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACtCC,QAAQ,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACU,QAAQ,CAAC;MAClDC,QAAQ,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACU,QAAQ;KAClD,CAAC;EACN;EAEA,IAAID,QAAQ;IACV,OAAO,IAAI,CAACF,SAAS,CAACK,GAAG,CAAC,UAAU,CAAC;EACvC;EACA,IAAID,QAAQ;IACV,OAAO,IAAI,CAACJ,SAAS,CAACK,GAAG,CAAC,UAAU,CAAC;EACvC;EAEAC,KAAK;IACH,IAAI,CAACT,OAAO,CAACS,KAAK,CAAC,IAAI,CAACN,SAAS,CAAC,CAACO,SAAS,CAC1CC,OAAO,IAAG;MACRC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;MACpB,IAAGA,OAAO,EAAC;QACT;QACA,IAAI,CAACV,MAAM,CAACa,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;QACnC,IAAIC,KAAK,GAAG,QAAQ,GAAGC,IAAI,CAAC,IAAI,CAACb,SAAS,CAACY,KAAK,CAACV,QAAQ,GAAG,GAAG,GAAG,IAAI,CAACF,SAAS,CAACY,KAAK,CAACR,QAAQ,CAAC;QAChGU,cAAc,CAACC,OAAO,CAAC,kBAAkB,EAAEH,KAAK,CAAC;OAClD,MACG;QACF,IAAI,CAACI,WAAW,GAAG,KAAK;QACxB,IAAI,CAAChB,SAAS,CAACK,GAAG,CAAC,UAAU,CAAC,CAACY,QAAQ,CAAC,EAAE,CAAC;QAC3C,IAAI,CAACjB,SAAS,CAACK,GAAG,CAAC,UAAU,CAAC,CAACa,eAAe,EAAE;;IAErD,CAAC,EACEC,KAAK,IAAG;MACRV,OAAO,CAACC,GAAG,CAACS,KAAK,CAAC;MAClB,IAAI,CAACH,WAAW,GAAG,KAAK;MACxB,IAAI,CAAChB,SAAS,CAACK,GAAG,CAAC,UAAU,CAAC,CAACY,QAAQ,CAAC,EAAE,CAAC;MAC3C,IAAI,CAACjB,SAAS,CAACK,GAAG,CAAC,UAAU,CAAC,CAACa,eAAe,EAAE;IAElD,CAAC,CACF;EACH;CAGD;AA/CYxB,cAAc,eAL1BH,SAAS,CAAC;EACT6B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACW5B,cAAc,CA+C1B;SA/CYA,cAAc","names":["Component","FormControl","Validators","LoginComponent","constructor","formBuilder","service","router","ngOnInit","loginForm","group","username","required","password","get","login","subscribe","results","console","log","navigate","value","btoa","sessionStorage","setItem","loginStatus","setValue","markAsUntouched","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\malak\\Documents\\OneDrive\\uni\\cmuq\\UBS-ideasphere\\ideasphere\\src\\app\\admin\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n// import { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, FormControl, Validators} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm!: FormGroup;\r\n  loginStatus = true;\r\n\r\n  constructor(private formBuilder: FormBuilder, private service: SignupLoginService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n      this.loginForm = this.formBuilder.group({\r\n        username: new FormControl('', Validators.required),\r\n        password: new FormControl('', Validators.required)\r\n      })\r\n  }\r\n\r\n  get username(){\r\n    return this.loginForm.get('username');\r\n  }\r\n  get password(){\r\n    return this.loginForm.get('password');\r\n  }\r\n\r\n  login(){\r\n    this.service.login(this.loginForm).subscribe(\r\n      results => {\r\n        console.log(results);\r\n        if(results){\r\n          //navigate to dashboard\r\n          this.router.navigate(['dashboard']);\r\n          var value = 'Basic ' + btoa(this.loginForm.value.username + ':' + this.loginForm.value.password);\r\n          sessionStorage.setItem('loginCredentials', value);\r\n        }\r\n        else{\r\n          this.loginStatus = false;\r\n          this.loginForm.get('password').setValue(\"\");\r\n          this.loginForm.get('password').markAsUntouched();\r\n        }\r\n     },\r\n        error => {\r\n        console.log(error);\r\n        this.loginStatus = false\r\n        this.loginForm.get('password').setValue(\"\");\r\n        this.loginForm.get('password').markAsUntouched();\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}