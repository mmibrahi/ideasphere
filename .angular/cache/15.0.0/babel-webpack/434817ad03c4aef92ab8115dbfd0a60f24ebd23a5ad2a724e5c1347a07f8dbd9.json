{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class IdeaService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8082/api/ideas'; // Update this to your actual Spring Boot endpoint\n  }\n  // Fetch all ideas\n  getIdeas() {\n    return this.http.get(this.apiUrl);\n  }\n  // Fetch a single idea by ID\n  getIdeaById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  saveIdea(idea) {\n    return this.http.post(this.apiUrl, idea);\n  }\n  static #_ = this.ɵfac = function IdeaService_Factory(t) {\n    return new (t || IdeaService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: IdeaService,\n    factory: IdeaService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,iCAAiC,CAAC,CAAC;EAEb;EAErC;EACAC,QAAQ;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAQ,IAAI,CAACC,MAAM,CAAC;EAC1C;EAEA;EACAC,WAAW,CAACC,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAM,GAAG,IAAI,CAACC,MAAM,IAAIE,EAAE,EAAE,CAAC;EACnD;EAEFC,QAAQ,CAACC,IAAsE;IAC7E,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAO,IAAI,CAACL,MAAM,EAAEI,IAAI,CAAC;EAChD;EAAC;qBAjBUT,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAW,SAAXX,WAAW;IAAAY,YAFV;EAAM","names":["IdeaService","constructor","http","getIdeas","get","apiUrl","getIdeaById","id","saveIdea","idea","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\malak\\Documents\\OneDrive\\uni\\cmuq\\UBS-ideasphere\\ideasphere\\src\\app\\Service\\idea.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IdeaService {\r\n  private apiUrl = 'http://localhost:8082/api/ideas'; // Update this to your actual Spring Boot endpoint\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n    // Fetch all ideas\r\n    getIdeas(): Observable<any[]> {\r\n      return this.http.get<any[]>(this.apiUrl);\r\n    }\r\n  \r\n    // Fetch a single idea by ID\r\n    getIdeaById(id: number): Observable<any> {\r\n      return this.http.get<any>(`${this.apiUrl}/${id}`);\r\n    }\r\n\r\n  saveIdea(idea: { id?: number; title: string; content: string; tagname: string }): Observable<void> {\r\n    return this.http.post<void>(this.apiUrl, idea);\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}